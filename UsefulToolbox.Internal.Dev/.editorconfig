# This file is the top-most EditorConfig file
root = true

# All Files
[*]
charset = utf-8
end_of_line = crlf
indent_style = space
indent_size = 4
insert_final_newline = false
trim_trailing_whitespace = true

# XML Project Files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Configuration Files
[*.{json,xml,yml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

# Markdown Files
[*.md]
trim_trailing_whitespace = false

# Snippet Files
[*.snippet]
indent_size = 2

# Web Files
[*.{htm,html,css,scss,less}]
insert_final_newline = true

# Script files
[*.{js,ts}]
indent_style = tab

[*.ps1]
indent_style = tab

# Dotnet Code Style Settings
[*.{cs,vb}]
indent_style = tab

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false : suggestion
dotnet_style_qualification_for_property = false : suggestion
dotnet_style_qualification_for_method = false : suggestion
dotnet_style_qualification_for_event = false : suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members : warning

# Suggest more modern language features when available
dotnet_style_object_initializer = true : suggestion
dotnet_style_collection_initializer = true : suggestion
dotnet_style_coalesce_expression = true : warning
dotnet_style_null_propagation = true : suggestion
dotnet_style_explicit_tuple_names = true : warning
dotnet_prefer_inferred_tuple_names = false : suggestion
dotnet_prefer_inferred_anonymous_type_member_names = false : suggestion

# Naming Symbols
# constants - define constants
dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.required_modifiers = const

# non_private_fields - define public, internal, protected and protected internal fields
dotnet_naming_symbols.non_private_fields.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.non_private_fields.applicable_kinds = field

# private_fields - define private fields
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.applicable_kinds = field

# async_methods - define async methods
dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.required_modifiers = async

# non_field_members - define all class members except fields
dotnet_naming_symbols.non_field_members.applicable_kinds = method, property, event

# parameters - defines any parameter
dotnet_naming_symbols.parameters.applicable_kinds = parameter

# non_interface_types - defines class, struct, enum and delegate types
dotnet_naming_symbols.non_interface_types.applicable_kinds = class, struct, enum, delegate

# interface_types - defines interfaces
dotnet_naming_symbols.interface_types.applicable_kinds = interface

# Naming Styles
# camel_case - define the camelCase style
dotnet_naming_style.camel_case.capitalization = camel_case

# pascal_case - define the PascalCase style
dotnet_naming_style.pascal_case.capitalization = pascal_case

# camel_case_and_prefix_with_ - private fields must be camelCase and the first character of an private field must be an '_'
dotnet_naming_style.camel_case_and_prefix_with_.capitalization = camel_case
dotnet_naming_style.camel_case_and_prefix_with_.required_prefix = _

# pascal_case_and_prefix_with_i - interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.pascal_case_and_prefix_with_i.capitalization = pascal_case
dotnet_naming_style.pascal_case_and_prefix_with_i.required_prefix = I

# suffix_async_methods_with_async - async methods must be PascalCase and the suffix of an async method must be 'Async'
dotnet_naming_style.suffix_async_methods_with_async.required_suffix = Async
dotnet_naming_style.suffix_async_methods_with_async.capitalization = pascal_case

# Naming Rules
# Constants must be PascalCase
dotnet_naming_rule.constants_must_be_pascal_case.severity = warning
dotnet_naming_rule.constants_must_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_must_be_pascal_case.style = pascal_case

# Non-private fields must be PascalCase
dotnet_naming_rule.non_private_fields_must_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_fields_must_be_pascal_case.symbols = non_private_fields
dotnet_naming_rule.non_private_fields_must_be_pascal_case.style = pascal_case

# Private fields must be camelCase and the first character of an private field must be an '_'
dotnet_naming_rule.private_fields_must_be_camel_case.severity = warning
dotnet_naming_rule.private_fields_must_be_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_must_be_camel_case.style = camel_case_and_prefix_with_

# Async methods must be PascalCase and the suffix of an async method must be 'Async'
dotnet_naming_rule.async_methods_must_be_camel_case_with_async_suffix.severity = warning
dotnet_naming_rule.async_methods_must_be_camel_case_with_async_suffix.symbols = async_methods
dotnet_naming_rule.async_methods_must_be_camel_case_with_async_suffix.style = suffix_async_methods_with_async

# Non-field members must be PascalCase
dotnet_naming_rule.non_field_members_must_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_must_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_must_be_pascal_case.style = pascal_case

# Parameters must be camelCase
dotnet_naming_rule.parameters_must_be_camel_case.severity = warning
dotnet_naming_rule.parameters_must_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_must_be_camel_case.style = camel_case

# Class, struct, enum and delegates must be PascalCase
dotnet_naming_rule.non_interface_types_must_be_pascal_case.severity = warning
dotnet_naming_rule.non_interface_types_must_be_pascal_case.symbols = non_interface_types
dotnet_naming_rule.non_interface_types_must_be_pascal_case.style = pascal_case

# Interfaces must be PascalCase and start with an 'I'
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.severity = warning
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.symbols = interface_types
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.style = prefix_interface_with_i

# C# Code Style Settings
[*.cs]
# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true : suggestion
csharp_style_var_when_type_is_apparent = true : suggestion
csharp_style_var_elsewhere = true : suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false : warning
csharp_style_expression_bodied_constructors = false : warning
csharp_style_expression_bodied_operators = false : warning

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true : suggestion
csharp_style_expression_bodied_indexers = true : suggestion
csharp_style_expression_bodied_accessors = true : suggestion

# Modifier preferences
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async : warning

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check = true : suggestion
csharp_style_inlined_variable_declaration = true : suggestion
csharp_prefer_simple_default_expression = true : suggestion
csharp_style_deconstructed_variable_declaration = true : suggestion
csharp_style_pattern_local_over_anonymous_function = true : warning
csharp_style_throw_expression = false : warning
csharp_style_conditional_delegate_call = true : suggestion

# Braces settings
csharp_prefer_braces = true : suggestion

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false

# Wrapping options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true